{"version":3,"sources":["webpack:///./ui/components/Validator.js"],"names":["Validator","props","state","showNumericError","showStudentResponseError","unitBeingMeasured","targetUnitOfMeasure","valid","options","value","text","optionsTarget","numericalValueChange","bind","studentResponseChange","unitOfMeasureChange","validate","grade","temp","volumes","e","setState","target","buildOptionsList","numericalValue","parseFloat","toFixed","studentResponse","disabled","showGrade","filter","input","output","convertFahrenheit","convertCelsius","convertKelvin","convertRankine","convertLiters","convertTablespoons","map","option","key","charAt","toUpperCase","slice","React","Component"],"mappings":"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","file":"app.6f4f75d5893e57246f59.hot-update.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class Validator extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showNumericError: false,\r\n            showStudentResponseError: false,\r\n            unitBeingMeasured: '',\r\n            targetUnitOfMeasure: '',\r\n            valid: false,\r\n            options: [\r\n                {value: 'rankine', text: 'Rankine'},\r\n                {value: 'celsius', text: 'Celsius'},\r\n                {value: 'fahrenheit', text: 'Fahrenheit'},\r\n                {value: 'kelvin', text: 'Kelvin'},\r\n                {value: 'liters', text: 'Liters'},\r\n                {value: 'tablespoons', text: 'Tablespoons'},\r\n                {value: 'cubic-inches', text: 'Cubic Inches'},\r\n                {value: 'cups', text: 'Cups'},\r\n                {value: 'cubic-feet', text: 'Cubic Feet'},\r\n                {value: 'gallons', text: 'Gallons'}\r\n            ],\r\n            optionsTarget: [],\r\n            valid: false,\r\n            disabled: true,\r\n            numericalValue: 0,\r\n            studentResponse: 0,\r\n            showGrade: false\r\n        };\r\n\r\n        this.numericalValueChange = this.numericalValueChange.bind(this);\r\n        this.studentResponseChange = this.studentResponseChange.bind(this);\r\n        this.unitOfMeasureChange = this.unitOfMeasureChange.bind(this);\r\n        this.targetUnitOfMeasure = this.targetUnitOfMeasure.bind(this);\r\n        this.validate = this.validate.bind(this);\r\n        this.grade = this.grade.bind(this);\r\n\r\n        this.temp = [\r\n            'rankine',\r\n            'celsius',\r\n            'fahrenheit',\r\n            'kelvin'\r\n        ];\r\n\r\n        this.volumes = [\r\n            'liters',\r\n            'tablespoons',\r\n            'cubic-inches',\r\n            'cups',\r\n            'cubic-feet',\r\n            'gallons'\r\n        ]\r\n    }\r\n\r\n    unitOfMeasureChange(e) {\r\n        this.setState({ unitBeingMeasured: e.target.value }, this.buildOptionsList);\r\n        this.validate();\r\n    }\r\n\r\n    targetUnitOfMeasure(e) {\r\n        this.setState({ targetUnitOfMeasure: e.target.value }, this.buildOptionsList);\r\n        this.validate();\r\n    }\r\n\r\n    numericalValueChange(e) {\r\n        if (e.target.value === \"\") {\r\n            this.setState({ showNumericError: false });\r\n        }\r\n\r\n        this.setState({ showNumericError: false, numericalValue: parseFloat(e.target.value).toFixed(2) });\r\n        this.validate();\r\n    }\r\n\r\n    studentResponseChange(e) {\r\n        if (e.target.value === \"\") {\r\n            this.setState({ showStudentResponseError: false });\r\n        }\r\n\r\n        this.setState({ showStudentResponseError: false, studentResponse: parseFloat(e.target.value).toFixed(2) });\r\n        this.validate();\r\n    }\r\n\r\n    validate() {\r\n        if (this.state.unitBeingMeasured && this.state.targetUnitOfMeasure && this.state.studentResponse && this.state.numericalValue) {\r\n            this.setState({ disabled: false, showGrade: true });\r\n            this.grade();\r\n        } else {\r\n            this.setState({ disabled: true, showGrade: false });\r\n        }\r\n    }\r\n\r\n    buildOptionsList() {\r\n        switch (this.state.unitBeingMeasured) {\r\n            case \"fahrenheit\":\r\n            case \"celsius\": \r\n            case \"kelvin\": \r\n            case 'rankine':\r\n                this.setState({\r\n                    optionsTarget: this.temp.filter(e => e !== this.state.unitBeingMeasured)\r\n                });\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    optionsTarget: this.volumes.filter(e => e !== this.state.unitBeingMeasured)\r\n                })\r\n                \r\n        }\r\n    }\r\n\r\n    convertFahrenheit (input, output) {\r\n        switch(output) {\r\n            case \"rankine\":\r\n                // done\r\n                return parseFloat((input * 1.0) - 459.67).toFixed(2);\r\n            case \"kelvin\":\r\n                // done\r\n                return parseFloat(((input - 32) / 1.8) + 273.15).toFixed(2)\r\n            case \"celsius\":\r\n                // done\r\n                return parseFloat((input - 32) / 1.8).toFixed(2);\r\n            default: \r\n                return;\r\n        }\r\n    }\r\n\r\n    convertCelsius (input, output) {\r\n        switch(output) {\r\n            case \"fahrenheit\":\r\n                // done\r\n                return parseFloat((input * 1.8) + 32).toFixed(2);\r\n            case \"kelvin\":\r\n                // done\r\n                return parseFloat((input + 273.15)).toFixed(2);\r\n            case \"rankine\":\r\n                // done\r\n                return parseFloat(((input * 9/5) + 491.67)).toFixed(2);\r\n            default: \r\n                return;\r\n        }\r\n    }\r\n\r\n    convertKelvin (input, output) {\r\n        switch(output) {\r\n            case \"rankine\":\r\n                // done\r\n                return parseFloat((input * 1.8)).toFixed(2);\r\n            case \"fahrenheit\":\r\n                // done\r\n                return parseFloat((((input - 273.15) * 9/5) + 32)).toFixed(2);\r\n            case \"celsius\":\r\n                // done\r\n                return parseFloat((input - 273.15)).toFixed(2);\r\n            default: \r\n                return;\r\n        }\r\n    }\r\n\r\n    convertRankine (input, output) {\r\n        switch(output) {\r\n            case \"fahrenheit\":\r\n                // done\r\n                return parseFloat((input - 459.67)).toFixed(2);\r\n            case \"kelvin\":\r\n                // done\r\n                return parseFloat((input * 5/9)).toFixed(2);\r\n            case \"celsius\":\r\n                // done\r\n                return parseFloat((input - 491.67) * 5/9);\r\n            default: \r\n                return;\r\n        }\r\n    }\r\n\r\n    convertLiters (input, output) {\r\n        switch(output) {\r\n            case \"tablespoons\":\r\n                return parseFloat(input * 67.628).toFixed(2);\r\n            case \"cubic-inches\":\r\n                return parseFloat(input * 61.024).toFixed(2);\r\n            case \"cups\":\r\n                return parseFloat((input * 4.227)).toFixed(2);\r\n            case \"cubic-feet\":\r\n                return parseFloat(input / 28.317).toFixed(2);\r\n            case \"gallons\":\r\n                return parseFloat(input / 3.785).toFixed(2);\r\n            default: \r\n                return;\r\n        }\r\n    }\r\n\r\n    convertTablespoons (input, output) {\r\n        switch(output) {\r\n            case \"liters\":\r\n                return parseFloat(input / 67.628).toFixed(2);\r\n            case \"cubic-inches\":\r\n                return parseFloat(input / 1.108).toFixed(2);\r\n            case \"cups\":\r\n                return parseFloat((input / 16)).toFixed(2);\r\n            case \"cubic-feet\":\r\n                return parseFloat(input / 1915.013).toFixed(2);\r\n            case \"gallons\":\r\n                return parseFloat(input / 256).toFixed(2);\r\n            default: \r\n                return;\r\n        }\r\n    }\r\n\r\n    grade() {\r\n        let value;\r\n\r\n        switch(this.state.unitBeingMeasured) {\r\n            case \"fahrenheit\":\r\n                value = parseFloat(this.convertFahrenheit(this.state.numericalValue, this.state.targetUnitOfMeasure)).toFixed(2);\r\n                break;\r\n            case \"celsius\":\r\n                value = this.convertCelsius(this.state.numericalValue, this.state.targetUnitOfMeasure);\r\n                break;\r\n            case \"kelvin\":\r\n                value = this.convertKelvin(this.state.numericalValue, this.state.targetUnitOfMeasure);\r\n                break;\r\n            case \"rankine\":\r\n                value = this.convertRankine(this.state.numericalValue, this.state.targetUnitOfMeasure);\r\n                break;\r\n            case \"liters\":\r\n                    value = this.convertLiters(this.state.numericalValue, this.state.targetUnitOfMeasure);\r\n                    break;\r\n            case \"tablespoons\":\r\n                    value = this.convertTablespoons(this.state.numericalValue, this.state.targetUnitOfMeasure);\r\n                    break;\r\n        }\r\n\r\n        if (value === this.state.studentResponse) {\r\n            this.setState({ valid: true, showGrade: true });\r\n        } else {\r\n            this.setState({ valid: false, showGrade: true });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n           <div>\r\n                <h1>Student Grade Validator</h1>\r\n                <hr />\r\n                \r\n                <form>\r\n                    <label htmlFor=\"numericalValue\">Input Numerical Value</label>\r\n                    <input className=\"form-control\" onChange={this.numericalValueChange} onBlur={this.numericalValueChange} type=\"text\" id=\"numericalValue\" />\r\n                    \r\n                    <label htmlFor=\"unitOfMeasure\">Input Unit of Measure</label>\r\n                    <select className=\"form-control\" defaultValue='default' onChange={this.unitOfMeasureChange}>\r\n                        <option value=\"default\" disabled>Please Select</option>\r\n                        {this.state.options.map((option, key) => {\r\n                            return <option key={key} value={option.value}>{option.text}</option>\r\n                        })}\r\n                    </select>\r\n\r\n                    <label htmlFor=\"targetOfMeasure\">Target Unit of Measure</label>\r\n                    <select className=\"form-control\" defaultValue='default' onChange={this.targetUnitOfMeasure}>\r\n                        <option value=\"default\" disabled>Please Select</option>\r\n                        {this.state.optionsTarget.map((option, key) => {\r\n                            return <option key={key} value={option}>{option.charAt(0).toUpperCase() + option.slice(1)}</option>\r\n                        })}\r\n                    </select>\r\n\r\n                    <label htmlFor=\"studentResponse\">Student Response</label>\r\n                    <input  className=\"form-control\" onChange={this.studentResponseChange} onBlur={this.studentResponseChange} type=\"text\" id=\"studentResponse\" />\r\n                </form>\r\n\r\n                <hr />\r\n                {this.state.showGrade ? this.state.valid ? <h2 className=\"correct\">Correct</h2> : <h2 className=\"incorrect\">Incorrect</h2> : \"\"}\r\n            </div>\r\n        )\r\n    }\r\n}"],"sourceRoot":""}